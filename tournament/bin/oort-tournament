#!/usr/bin/env ruby
require 'saulabs/trueskill'
require 'oort-tournament/db'
require 'net/http'
require 'tempfile'
require 'json'

include Saulabs::TrueSkill

SCENARIO = "scenarios/basic.json"

seed = $$
puts "seed: #{$$}"

db = OortTournament::DB.new

ai1, ai2, = *db.ais.keys.shuffle
ai_names = [ai1, ai2]

puts "#{ai1} vs #{ai2}"

Net::HTTP.start("gist.github.com", 443, :use_ssl => true) do |conn|
  tmpfiles = ai_names.map do |ai_name|
    ai = db.ais[ai_name]
    path = "/api/v1/json/#{ai['sha1']}"
    res = conn.get(path)
    metadata = JSON.parse(res.body)
    path = "/raw/#{ai['sha1']}/#{metadata['gists'][0]['files'][0]}"
    res = conn.get(path)
    case res
    when Net::HTTPOK
      Tempfile.new('oort').tap do |io|
        io.write res.body
        io.close
      end
    else
      fail "failed to retrieve AI #{ai_name}: #{res.class}"
    end
  end
end

results_file = Tempfile.new 'oort'
system "./dedicated/oort_dedicated --results #{results_file.path} --seed #{seed} #{SCENARIO} examples/switch.lua examples/switch.lua"
fail "oort_dedicated failed" unless $?.success?

winner_id, winner_team_name, elapsed = File.read(results_file.path).split("\t")
winner_id = winner_id.to_i
winner_name = ai_names[winner_id]

puts "winner: #{winner_id} #{winner_name}"

# the trueskill gem is broken
ai_names.sort_by! { |x| x == winner_name ? 0 : 1 }

ratings = ai_names.map do |name|
  ai = db.ais[name]
  Rating.new ai['mean'], ai['deviation'], ai['activity']
end

ranks = [1] + [2]*(ratings.size-1)
#pp ai_names.zip(ratings, ranks)
graph = FactorGraph.new(ratings.map { |x| [x] }, ranks)
graph.update_skills
#pp ai_names.zip(ratings, ranks)

ai_names.zip(ratings).each do |name, rating|
  puts "#{name}: d_mean=#{rating.mean-db.ais[name]['mean']} d_dev=#{rating.deviation-db.ais[name]['deviation']}"
  db.ais[name].merge!(
    'mean' => rating.mean,
    'deviation' => rating.deviation,
    'activity' => rating.activity
  )
end

db.save
